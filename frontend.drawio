<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0" version="26.1.0">
  <diagram name="Page-1" id="iFm2WoA2XVPS7WGQNMdN">
    <mxGraphModel dx="1426" dy="781" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="V4VD0yqdSJa1NpHtcIbv-1" value="&lt;div&gt;&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;import {computed, ref, watchEffect} from &#39;vue&#39;&lt;/div&gt;&lt;div&gt;import { VDataTable, VBtn, VTextField } from &#39;vuetify/components&#39;&lt;/div&gt;&lt;div&gt;import { Instruct } from &quot;../../entities/instruct&quot;;&lt;/div&gt;&lt;div&gt;import {browse, save} from &quot;../../apis/instruct.ts&quot;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const [ADD, MODIFY, REMOVE] = [Symbol(), Symbol(), Symbol()]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const items = ref&amp;lt;Instruct[]&amp;gt;([])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const addItems = ref&amp;lt;Instruct[]&amp;gt;([])&lt;/div&gt;&lt;div&gt;const updateItems = ref&amp;lt;Instruct[]&amp;gt;([])&lt;/div&gt;&lt;div&gt;const removeItems = ref&amp;lt;Instruct[]&amp;gt;([])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const itemsMap = new Map([[ADD, addItems], [MODIFY, updateItems], [REMOVE, removeItems]])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const draftItems = computed(() =&amp;gt; ([] as Instruct[]).concat(addItems.value, updateItems.value, removeItems.value))&lt;/div&gt;&lt;div&gt;const draftIDs = computed(() =&amp;gt; draftItems.value.map(e =&amp;gt; e.id))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const addIDs = computed(() =&amp;gt; addItems.value.map(elem =&amp;gt; elem.id))&lt;/div&gt;&lt;div&gt;const modifyIDs = computed(() =&amp;gt; updateItems.value.map(elem =&amp;gt; elem.id))&lt;/div&gt;&lt;div&gt;const removeIDs = computed(() =&amp;gt; removeItems.value.map(elem =&amp;gt; elem.id))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const selected = ref&amp;lt;number[]&amp;gt;([])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const headers = [{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; title: &quot;No.&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; key: &quot;id&quot;,&lt;/div&gt;&lt;div&gt;}, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; title: &quot;Name&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; key: &quot;name&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; value: &quot;name&quot;,&lt;/div&gt;&lt;div&gt;}, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; title: &quot;Script&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; key: &quot;script&quot;,&lt;/div&gt;&lt;div&gt;}, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; title: &quot;Description&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; key: &quot;description&quot;,&lt;/div&gt;&lt;div&gt;}, {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; title: &quot;Operation&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; key: &quot;operation&quot;,&lt;/div&gt;&lt;div&gt;}]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const mergedItems = computed(() =&amp;gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return [...items.value.filter(elem =&amp;gt; !draftIDs.value.includes(elem.id)), ...draftItems.value]&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const maxID = computed(() =&amp;gt; mergedItems.value.length == 0? 0 : Math.max(...mergedItems.value.map(elem =&amp;gt; elem.id)))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;console.info(maxID.value)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const register = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addItems.value = [...addItems.value, { id: maxID.value + 1, name: &quot;&quot;, script: &quot;&quot;, description: &quot;&quot;}]&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const edit = async (item: Instruct) =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; updateItems.value = [...updateItems.value, {...item}]&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const copy = async (item: Instruct) =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addItems.value = [...addItems.value, {...item, id: maxID.value + 1}]&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const remove = async (item: Instruct) =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; removeItems.value = [...removeItems.value, item]&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const cancel = async (operation: symbol, item: Instruct) =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; itemsMap.get(operation)!!.value = itemsMap.get(operation)!!.value.filter(elem =&amp;gt; elem.id != item.id)&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const handleSave = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(draftItems.value.length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; await save(addItems.value, updateItems.value, removeItems.value)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; items.value = await browse()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addItems.value = []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; updateItems.value = []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; removeItems.value = []&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;watchEffect(async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; items.value = await browse()&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const rowClass = (item: Instruct) =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return removeIDs.value.includes(item.id)? {class: &#39;remove-item&#39;}:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; modifyIDs.value.includes(item.id)? {class: &#39;modify-item&#39;}:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addIDs.value.includes(item.id)? { class: &#39;add-item&#39; }: {}&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const handleEdit = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(selected.value.length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const editIDs = selected.value.filter(elem =&amp;gt; !draftIDs.value.includes(elem))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const editItems = items.value.filter(elem =&amp;gt; editIDs.includes(elem.id)).map(elem =&amp;gt; ({...elem}))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; updateItems.value = [...updateItems.value, ...editItems]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; selected.value = []&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const handleCopy = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(selected.value.length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const targetIDs = selected.value.filter(elem =&amp;gt; !draftIDs.value.includes(elem))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const targets = items.value.filter(elem =&amp;gt; targetIDs.includes(elem.id)).map((elem,index) =&amp;gt; ({...elem, id: maxID.value + 1 + index}))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addItems.value = [...addItems.value, ...targets]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; selected.value = []&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const handleRemove = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(selected.value.length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const targetIDs = selected.value.filter(elem =&amp;gt; !draftIDs.value.includes(elem))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; const targets = items.value.filter(elem =&amp;gt; targetIDs.includes(elem.id))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; removeItems.value = [...removeItems.value, ...targets]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; selected.value = []&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;const handleCancel = async () =&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if(selected.value.length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; addItems.value = addItems.value.filter(elem =&amp;gt; !selected.value.includes(elem.id))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; updateItems.value = updateItems.value.filter(elem =&amp;gt; !selected.value.includes(elem.id))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; removeItems.value = removeItems.value.filter(elem =&amp;gt; !selected.value.includes(elem.id))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; selected.value = []&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;template&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;operation-group&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;operation-item&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;register&quot; icon=&quot;mdi-plus-box&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;handleEdit&quot; icon=&quot;$edit&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;handleCopy&quot; icon=&quot;mdi-file-multiple&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;handleRemove&quot; icon=&quot;mdi-delete&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class=&quot;operation-item&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;handleCancel&quot; icon=&quot;mdi-cancel&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;handleSave&quot; icon=&quot;mdi-cloud-upload&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;v-data-table :headers=&quot;headers&quot; :items=&quot;mergedItems&quot; v-model=&quot;selected&quot; item-key=&quot;id&quot; :row-props=&quot;({item}) =&amp;gt; rowClass(item)&quot; show-select&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;template v-slot:item.name=&quot;{item}&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-text-field v-if=&quot;addIDs.includes(item.id) || modifyIDs.includes(item.id)&quot; v-model=&quot;item.name&quot; compact placeholder=&quot;Name&quot;&amp;gt;&amp;lt;/v-text-field&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else v-text=&quot;item.name&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/template&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;template v-slot:item.script=&quot;{item}&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-text-field v-if=&quot;addIDs.includes(item.id) || modifyIDs.includes(item.id)&quot; v-model=&quot;item.script&quot; compact placeholder=&quot;Script&quot;&amp;gt;&amp;lt;/v-text-field&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else v-text=&quot;item.script&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/template&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;template v-slot:item.description=&quot;{item}&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-text-field v-if=&quot;addIDs.includes(item.id) || modifyIDs.includes(item.id)&quot; v-model=&quot;item.description&quot; compact placeholder=&quot;Description&quot;&amp;gt;&amp;lt;/v-text-field&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else v-text=&quot;item.description&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/template&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;template v-slot:item.operation=&quot;{item}&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-if=&quot;addIDs.includes(item.id)&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; cancel(ADD, item)&quot; icon=&quot;mdi-cancel&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else-if=&quot;modifyIDs.includes(item.id)&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; cancel(MODIFY, item)&quot; icon=&quot;mdi-cancel&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else-if=&quot;removeIDs.includes(item.id)&quot;&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; cancel(REMOVE, item)&quot; icon=&quot;mdi-cancel&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div v-else&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; edit(item)&quot; icon=&quot;$edit&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; copy(item)&quot; icon=&quot;mdi-file-multiple&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;v-btn @click=&quot;() =&amp;gt; remove(item)&quot; icon=&quot;mdi-delete&quot;&amp;gt;&amp;lt;/v-btn&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/template&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/v-data-table&amp;gt;&lt;/div&gt;&lt;div&gt;&amp;lt;/template&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;style module&amp;gt;&lt;/div&gt;&lt;div&gt;.remove-item {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; background: linear-gradient(to left, rgba(255,0,255,0.3), rgba(255, 255, 0, 0.3), rgba(0, 255, 255, 0.3));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&amp;lt;/style&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;style scoped&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;.operation-group {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; display: flex;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; align-items: center;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; justify-content: space-between;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;.operation-item {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; display: flex;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; align-items: center;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;:deep(.remove-item) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; background: linear-gradient(to left, rgba(255,0,255,0.3), rgba(255, 255, 0, 0.3), rgba(0, 255, 255, 0.3));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;:deep(.add-item) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; background-color: rgba(0, 200, 0, 0.5);;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;:deep(.modify-item) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; background-color: rgba(255, 255, 0, 0.7);;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;lt;/style&amp;gt;&lt;/div&gt;" style="shape=note;strokeWidth=2;fontSize=14;size=20;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontColor=#666600;align=left;" vertex="1" parent="1">
          <mxGeometry x="70" y="40" width="630" height="3810" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
